{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\Florian\\\\Desktop\\\\ReactTest\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\Florian\\\\Desktop\\\\ReactTest\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\Florian\\\\Desktop\\\\ReactTest\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\Florian\\\\Desktop\\\\ReactTest\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\Florian\\\\Desktop\\\\ReactTest\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"c:\\\\Users\\\\Florian\\\\Desktop\\\\ReactTest\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"c:\\\\Users\\\\Florian\\\\Desktop\\\\ReactTest\\\\frontend\\\\src\\\\Components\\\\Main.js\";\nimport React from 'react';\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n    _this.state = {\n      imageURL: ''\n    };\n    _this.handleUploadImage = _this.handleUploadImage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"handleUploadImage\",\n    value: function handleUploadImage(ev) {\n      var _this2 = this;\n\n      ev.preventDefault();\n      var data = new FormData();\n      data.append('file', this.uploadInput.files[0]);\n      data.append('filename', this.fileName.value);\n      fetch('http://localhost:8000/upload', {\n        method: 'POST',\n        body: data\n      }).then(function (response) {\n        response.json().then(function (body) {\n          _this2.setState({\n            imageURL: \"http://localhost:8000/\".concat(body.file)\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"form\", {\n        onSubmit: this.handleUploadImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: function ref(_ref) {\n          _this3.uploadInput = _ref;\n        },\n        type: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: function ref(_ref2) {\n          _this3.fileName = _ref2;\n        },\n        type: \"text\",\n        placeholder: \"File name please\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Upload\")), React.createElement(\"img\", {\n        src: this.state.imageURL,\n        alt: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport default Main;","map":{"version":3,"sources":["c:\\Users\\Florian\\Desktop\\ReactTest\\frontend\\src\\Components\\Main.js"],"names":["React","Main","props","state","imageURL","handleUploadImage","bind","ev","preventDefault","data","FormData","append","uploadInput","files","fileName","value","fetch","method","body","then","response","json","setState","file","ref","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,I;;;;;AACL,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACZC,MAAAA,QAAQ,EAAE;AADE,KAAb;AAIA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AAPkB;AAQlB;;;;sCAEiBC,E,EAAI;AAAA;;AACrBA,MAAAA,EAAE,CAACC,cAAH;AAEA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB,KAAKC,WAAL,CAAiBC,KAAjB,CAAuB,CAAvB,CAApB;AACAJ,MAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwB,KAAKG,QAAL,CAAcC,KAAtC;AAEAC,MAAAA,KAAK,CAAC,8BAAD,EAAiC;AACrCC,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,IAAI,EAAET;AAF+B,OAAjC,CAAL,CAGGU,IAHH,CAGQ,UAACC,QAAD,EAAc;AACrBA,QAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAACD,IAAD,EAAU;AAC9B,UAAA,MAAI,CAACI,QAAL,CAAc;AAAElB,YAAAA,QAAQ,kCAA2Bc,IAAI,CAACK,IAAhC;AAAV,WAAd;AACA,SAFD;AAGA,OAPD;AAQA;;;6BAEQ;AAAA;;AACR,aACC;AAAM,QAAA,QAAQ,EAAE,KAAKlB,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAO,QAAA,GAAG,EAAE,aAACmB,IAAD,EAAS;AAAE,UAAA,MAAI,CAACZ,WAAL,GAAmBY,IAAnB;AAAyB,SAAhD;AAAkD,QAAA,IAAI,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAO,QAAA,GAAG,EAAE,aAACA,KAAD,EAAS;AAAE,UAAA,MAAI,CAACV,QAAL,GAAgBU,KAAhB;AAAsB,SAA7C;AAA+C,QAAA,IAAI,EAAC,MAApD;AAA2D,QAAA,WAAW,EAAC,kBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAJD,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,CARD,EAWC;AAAK,QAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWC,QAArB;AAA+B,QAAA,GAAG,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXD,CADD;AAeA;;;;EA5CiBJ,KAAK,CAACyB,S;;AA+CzB,eAAexB,IAAf","sourcesContent":["import React from 'react';\r\n\r\nclass Main extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\timageURL: '',\r\n\t\t};\r\n\r\n\t\tthis.handleUploadImage = this.handleUploadImage.bind(this);\r\n\t}\r\n\r\n\thandleUploadImage(ev) {\r\n\t\tev.preventDefault();\r\n\r\n\t\tconst data = new FormData();\r\n\t\tdata.append('file', this.uploadInput.files[0]);\r\n\t\tdata.append('filename', this.fileName.value);\r\n\r\n\t\tfetch('http://localhost:8000/upload', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: data,\r\n\t\t}).then((response) => {\r\n\t\t\tresponse.json().then((body) => {\r\n\t\t\t\tthis.setState({ imageURL: `http://localhost:8000/${body.file}` });\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.handleUploadImage}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input ref={(ref) => { this.fileName = ref; }} type=\"text\" placeholder=\"File name please\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button>Upload</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<img src={this.state.imageURL} alt=\"img\" />\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}